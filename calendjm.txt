;************************************************************
; Programme: Vendredi.txt
;
; DESCRIPTION : Les années valides
; sont de 2000 à 2050.
;
; Auteurs: Jean-Michel Landry, Patrick Chalifour
; Codes permanents : LANJ09049206, CHAP03089503
; Courriel: landry.jean-michel.2@courrier.uqam.ca , dj991063@ens.uqam.ca
; date: 20 avril 2020
; cours: INF2171
;*************************************************************
;
;Programme principal qui appel les sous programmes nécessaires
;
         CALL    bonjour     
debut:   CALL    question    
         CALL    reinit      
         CALL    saisi       
         CPA     -1,i        
         BREQ    debut       
         CALL    premjour    
         CALL    premjeu     
         CALL    STRBUILD    
         BR      debut       
;
; affiche le message de bienvenu et le fonctionnement du programme.
;
bonjour: STRO    bienvenu,d  
         STRO    manuel,d    
         RET0                
;
; affiche la demande de saisie a l'utilisateur.
;
question:STRO    demande,d   
         RET0                
;
; Reinitialise les valeurs de alphab et autres
; variables a 0
reinit:  LDX     0,i         
         LDA     0,i                 
         STA     destin,d
         STA     ind,d    
         STA     annee,d     
         STA     mois,d      
retalpha:STBYTEA date,x      
         ADDX    1,i         
         CPX     7,i         
         BREQ    ret         
         BR      retalpha    
ret:     RET0                
;
; Sous programme qui saisi une chaine de caractere
; entrez par l'usager et valide que les characteres saisi sont des nombres.
; Il appelle ensuite un autre sous programme qui converti la saisi en annee
; et en mois pour utilisation ulterieur dans le programme. Ainsi qu'un sous
; programme qui valide que l'annee donner par l'utilisateur est valide.
;
saisi:   LDX     0,i         
         LDA     0,i         
lecture: CHARI   date,x      ; lecture d'un caractère de chaine
         LDA     0,i         
         LDBYTEA date,x      ; charge le caractère lu
         ADDX    1,i         ; position suivante
         CPA     '\n',i      
         BRNE    lecture     
         LDX     0,i         
         LDA     0,i         
analyse: LDBYTEA date,x      
         CPA     '\n',i      
         BREQ    finchain    
         ADDX    1,i         
         CPA     '0',i       
         BRLT    inval       
         CPA     '9',i       
         BRGT    inval       
         SUBA    48,i        
         STBYTEA datedec,x   
         CPX     6,i         
         BREQ    finchain    
         BR      analyse     
finchain:CPX     0,i         ; est-ce que le caractère ENTREE est le premier caractère lu
         BREQ    fin         
         CALL    converti    
         CALL    valideur    
retoure: RET0                
inval:   STRO    entinval,d  
         LDA     -1,i        
         BR      retoure     
; Sous programme qui valide que la date entree est entre les bornes 1901 et 2050.
;
valideur:LDA     0,i         
         LDX     0,i         
         LDA     annee,d     
         CPA     1901,i      
         BRLT    inval       
         CPA     2050,i      
         BRGT    inval       
         LDA     mois,d      
         CPA     12,i        
         BRGT    inval       
         RET0                
;
;Sous programme qui prend la date au long dans le champ date et la separe
;en mois et en annee
;
converti:LDA     0,i         
         LDX     1,i         
         LDBYTEA datedec,x   
         LDX     1000,i      
         CALL    mult        
         STA     annee,d     
         LDA     0,i         
         LDX     2,i         
         LDBYTEA datedec,x   
         LDX     100,i       
         CALL    mult        
         ADDA    annee,d     
         STA     annee,d     
         LDA     0,i         
         LDX     3,i         
         LDBYTEA datedec,x   
         LDX     10,i        
         CALL    mult        
         ADDA    annee,d     
         STA     annee,d     
         LDA     0,i         
         LDX     4,i         
         LDBYTEA datedec,x   
         ADDA    annee,d     
         STA     annee,d     
         LDA     0,i         
         LDX     5,i         
         LDBYTEA datedec,x   
         LDX     10,i        
         CALL    mult        
         ADDA    mois,d      
         STA     mois,d      
         LDA     0,i         
         LDX     6,i         
         LDBYTEA datedec,x   
         ADDA    mois,d      
         STA     mois,d      
         RET0                
;
;Sous programme pour calculer la premiere journee du mois et retourne l'indice en A
; Il trouve d'abord le nombre de jour ecouler depuis 1900 puis apelle un programme de
; division speciale pour trouver le reste. Celui-ci retourne l'indice du jour(dimanche = 0).
; Puis ce programme retourne l'indice du jour.
;
premjour:LDA     0,i         
         LDX     0,i         
;aaxx <- aaaa - 1900
;aaxx * 365 mais
;aaxx*365 => aaxx*(364+1) => aaxx*(1) => aaxx , car 364 est un multiple de 7
         LDA     annee,d     
         SUBA    1900,i      
         STA     aaxx,d      
         STA     compte,d    
;+ entier((aaxx-1) / 4)
         LDA     aaxx,d      
         SUBA    1,i         
         LDX     4,i         
         CALL    divise      
         ADDX    compte,d    
         STX     compte,d   
         LDX 0,i 
;+ entier((((mm - 1) * 57) + 50) / 100)
         LDA     mois,d      
         SUBA    1,i
         LDX     57,i        
         CALL    mult        
         ADDA    50,i        
         LDX     100,i       
         CALL    divise      
         ADDX    compte,d    
         STX     compte,d    
;+ (mm - 1) * 30
         LDA     mois,d      
         SUBA    1,i         
         LDX     30,i        
         CALL    mult        
         ADDA    compte,d    
         STA     compte,d    
;+ jj le premier jour donc 1
         LDA     1,i         
         ADDA    compte,d    
         STA     jours,d     ; le nombre de jours écoulés
;retrancher si bissex ou non
         LDX     mois,d      
         CPX     2,i   
         BRGT    retranch    
         BR      nope      
retranch:LDX jours,d
         LDA     aaxx,d      ; analysons le nombre d'année depuis 1900
         ANDA    3,i         ; divisible par 4 ?
         BREQ    bissex      ; oui, on enlève 1
nonbisse:SUBX    1,i         ; -1 pour l'année non bissextile
bissex:  SUBX    1,i         ; -2 pour l'année non bissextile ou -1 pour bissextile
         STX jours,d
; divison par 7 pour avoir l'indice du jour (dimanche = 0)
nope: LDA jours,d
         LDX     7,i         
         CALL    divise      
         STA     jourun,d    ; indice du premier jour   
         RET0                
;
; Sous programme qui trouve la date du premier jeudi du mois.
;
premjeu: LDX     1,i             
         LDA     jourun,d   
boucl:   CPA     4,i         
         BREQ    jeudi       
         CPA     11,i        
         BREQ    jeudi       
         ADDA    1,i         
         ADDX    1,i         
         BR      boucl       
jeudi:   STX     jeuprem,d 
         SUBX 1,i 
         ADDX    jours,d     
         STX     jours,d     
         RET0                
;
; Sous programme qui trouve si les jeudis du mois qui sont un jour de paie. Il range les
; dates dans un tableau nommés jourspai.
;
long:    .EQUATE 0
jourpaie:SUBSP   2,i ;WARNING: Number of bytes allocated (2) not equal to number of bytes listed in trace tag (0).
         DECO jeuprem,d
         CALL    lgtmois
         STA     long,s
         LDA     jours,d     
         LDX     14,i        
         CALL    divise      
         CPA     4,i         
         BREQ    oui  
         BR      non       
oui:     LDA     jeuprem,d   
         LDA     CHIFFRES,i  ; chaine d'origine
         STA     -2,s        
         LDA     jeuprem,d       ; position dans la chaine d'origine 
         ADDA jeuprem,d
         SUBA 1,i    
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA      destin,d   ; 12ième caractère
         STA     -8,s        
         ADDA    1,i         ; longueur de 2 caractères
         STA     -10,s       
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE     ; #retour
         LDX     destin,d     
         ADDX    2,i         
         STX     destin,d  
         BR      suiv                             
non:     LDA     jeuprem,d  
         ADDA    7,i 
         STA jeuprem,d
         LDA     CHIFFRES,i  ; chaine d'origine
         STA     -2,s        
         LDA     jeuprem,d       ; position dans la chaine d'origine 
         ADDA jeuprem,d
         SUBA 1,i  
         ADDA 12,i   
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA      destin,d   ; 12ième caractère
         STA     -8,s        
         ADDA    1,i         ; longueur de 2 caractères
         STA     -10,s       
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE     ; #retour
         LDX     destin,d     
         ADDX    3,i         
         STX     destin,d 
suiv:    LDA jeuprem,d
         ADDA    14,i
         CPA     long,s
         BRGT    term
         STA jeuprem,d
         LDBYTEA ',',i 
         STBYTEA SORTIE,x
         LDX     destin,d     
         ADDX    2,i         
         STX     destin,d 
         LDA     CHIFFRES,i  ; chaine d'origine
         STA     -2,s        
         LDA     jeuprem,d       ; position dans la chaine d'origine 
         ADDA    jeuprem,d
         SUBA    1,i     
ADDA 25,i
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA      destin,d   ; 12ième caractère
         STA     -8,s        
         ADDA    2,i         ; longueur de 2 caractères
         STA     -10,s       
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE     ; #retour
         LDX     destin,d     
         ADDX    3,i         
         STX     destin,d 
         BR      suiv       
term:    ADDSP   2,i ;WARNING: Number of bytes deallocated (2) not equal to number of bytes listed in trace tag (0).
         RET0                
;
;       Sous programme qui initialise un texte avec des espaces vides
;       Puis selon le mois il cherche dans un texte pour afficher le bon
;       en characteres.
;
STRBUILD:LDX     0,i         
         LDBYTEA "\n",i      
         STBYTEA SORTIE,x    
         ADDX    1,i         
         LDA     "  ",i      
espace:  STA     SORTIE,x    
         ADDX    2,i         
         CPX     500,i       
         BRLT    espace      
         LDA     mois,d      
         CPA     1,i         
         BREQ    JANVIER     
         CPA     2,i         
         BREQ    FEVRIER     
         CPA     3,i         
         BREQ    MARS        
         CPA     4,i         
         BREQ    AVRIL       
         CPA     5,i         
         BREQ    MAI         
         CPA     6,i         
         BREQ    JUIN        
         CPA     7,i         
         BREQ    JUILLET     
         CPA     8,i         
         BREQ    AOUT        
         CPA     9,i         
         BREQ    SEPTEMBR    
         CPA     10,i        
         BREQ    OCTOBRE     
         CPA     11,i        
         BREQ    NOVEMBRE    
         CPA     12,i        
         BREQ    DECEMBRE    
JANVIER: LDA     0,i         
         LDX     7,i         
         CALL    entete      
         BR      AFFICHE    
FEVRIER:LDA      8,i         
         LDX     7,i         
         CALL    entete      
         BR      AFFICHE    
MARS:    LDA     16,i         
         LDX     4,i         
         CALL    entete      
         BR      AFFICHE        
AVRIL:   LDA     21,i         
         LDX     5,i         
         CALL    entete      
         BR      AFFICHE   
MAI:     LDA     27,i         
         LDX     3,i         
         CALL    entete      
         BR      AFFICHE    
JUIN:    LDA     31,i         
         LDX     4,i         
         CALL    entete      
         BR      AFFICHE      
JUILLET: LDA     36,i         
         LDX     7,i         
         CALL    entete      
         BR      AFFICHE   
AOUT:    LDA     44,i         
         LDX     4,i         
         CALL    entete      
         BR      AFFICHE   
SEPTEMBR:LDA     49,i         
         LDX     9,i         
         CALL    entete      
         BR      AFFICHE   
          
OCTOBRE: LDA     59,i         
         LDX     7,i         
         CALL    entete      
         BR      AFFICHE   
           
NOVEMBRE: LDA    67,i         
         LDX     8,i         
         CALL    entete      
         BR      AFFICHE      
DECEMBRE:LDA     76,i         
         LDX     8,i         
         CALL    entete      
         BR      AFFICHE    


;
; Sous-programme : en-tete
; description : affiche l'entete du mois , soit le mois, l'annee,
; ainsi que les lettres des jours de la semaine
; IN
; A = position mois
; X = longeur de la chaine
;

entete:  STA     origine,d   ; position chaine de depart
         STX     longeur,d   ;
         LDA     TEXTE,i     ; chaine d'origine
         STA     -2,s        
         LDA     origine,d   ; position dans la chaine d'origine
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA     10,i        ; position dans la chaineD
         STA     destin,d    ;
         STA     -8,s        
         ADDA    longeur,d   ; longueur de la chaine
         STA     -10,s       
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE     ; #retour
         LDA     destin,d    
         ADDA    longeur,d   
         ADDA    1,i         ;
         STA     destin,d    ;
         LDA     date,i      ; chaine d'origine
         STA     -2,s        
         LDA     0,i         ; premier caractère
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA     destin,d    ;position dans la chaineD
         STA     -8,s        
         ADDA    3,i         ; longueur de AAAA -1         
         STA     -10,s       
         ADDA    1,i
         STA     destin,d
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE     
         RET0                

AFFICHE: CALL    sautL 
         LDA     TEXTE,i     ; chaine d'origine
         STA     -2,s        
         LDA     85,i        ; position chaine d'origine
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA     destin,d    ; position chaineDeDestination
         ADDA    6,i         ; ajout d'espace
         STA     -8,s        
         ADDA    19,i        ; longueur de 20 caractères
         STA     -10,s       
         ADDA    1,i
         STA     destin,d    ;ajustement pour prochain ajout a sortie
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE         
         CALL    affJours 
         CALL    sautL 
         LDA     paye,i     ; chaine d'origine
         STA     -2,s        
         LDA     0,i        ; position chaine d'origine
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA     destin,d    ; position chaineDeDestination        
         STA     -8,s        
         ADDA    15,i        ; longueur de 15 caractères de Jours de paye
         STA     -10,s       
         ADDA    1,i
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE      
         LDA     destin,d    ; position chaineDeDestination 
         ADDA    17,i        ; longueur de 17 caractères de Jours de pay
         STA     destin,d     
         CALL  jourpaie
         STRO    SORTIE,d    
         RET0   


; 
; Sous-programme: affJour
; description : affiche les journee du mois en fonction de
; l'annee 

   
affJours:LDA     0,i      ; position dans la chaine d'origine      
         STA     ind,d 
         LDA     1,i         
         STA     jAff,d      
         LDA     mois,d      
         CALL    lgtmois
         STA     jmois,d         
         LDA     destin,d     
         ADDA    5,i         
         STA     destin,d   ; ajustement espace initial      
         LDA     0,i                                
         STA     jsem,d 
         LDA     jsem,d           
         CPA     jourun,d    
         BREQ    initS
blanc:   LDA     jsem,d                  
         CPA     jourun,d    
         BREQ    initS     
         LDA     destin,d     
         ADDA    3,i         
         STA     destin,d    
         LDA     jsem,d      
         ADDA    1,i         
         STA     jsem,d      
         BR      blanc       
initS:   LDA     CHIFFRES,i  ; chaine d'origine
         STA     -2,s        
         LDA     ind,d       ; position dans la chaine d'origine      
         STA     -4,s        
         LDA     SORTIE,i    ; chaine de destination
         STA     -6,s        
         LDA     destin,d    ; 12ième caractère
         STA     -8,s        
         ADDA    2,i         ; longueur de 2 caractères
         STA     -10,s       
         SUBSP   10,i        ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE     ; #retour
         LDX     destin,d     
         ADDX    3,i         
         STX     destin,d 
         LDA     ind,d       ; position dans la chaine d'origine    
         ADDA    3,i         
         STA     ind,d  
fait:    LDA     jAff,d                    
         CPA     jmois,d               
         BREQ    fini
         LDA     jAff,d     
         ADDA    1,i
         STA     jAff,d    
         LDA     jsem,d                  
         CPA     6,i               
         BREQ    ind0
         ADDA    1,i         
         STA     jsem,d   
         BR      initS                      
ind0:    LDA     0,i         
         STA     jsem,d      
         CALL    sautL
         LDA     destin,d      
         ADDA    5,i         
         STA     destin,d    
         BR      initS    
fini:    RET0       






;        sous-programme RECOPIE
;
;paramètres:     adresse de la chaine d'origine
;                position du caractère dans la chaine d'origine
;                adresse de la chaine de destination
;                position du caractère dans la chaine de destination
;                position limite dans la chaine de destination
;
sauveX:  .EQUATE 0           ; #2h
sauveA:  .EQUATE 2           ; #2h
retour:  .EQUATE 4           ; #2h
limite:  .EQUATE 6           ; #2d
positioD:.EQUATE 8           ; position destination #2d
chaineD: .EQUATE 10          ; chaine destination #2h
positioO:.EQUATE 12          ; position origine #2d
chaineO: .EQUATE 14          ; chaine origine #2h
;
RECOPIE: SUBSP   4,i         ; #sauveX #sauveA
         STX     sauveX,s    
         STA     sauveA,s    
;
         LDA     0,i         
boucle:  LDX     positioO,s  ; position de départ
         LDA     chaineO,sxf ; caractère à copier
         ADDX    1,i         ; caractère suivant
         STX     positioO,s  
         LDX     positioD,s  ; position d'arrivée
         STA     chaineD,sxf ; caractère qui est copié
         ADDX    1,i         ; caractère suivant
         STX     positioD,s  
         CPX     limite,s    ; dernier caractère copié ?
         BRLT    boucle      ; non, on continue
         LDA     retour,s    
         STA     chaineO,s   
         LDA     sauveA,s    
         LDX     sauveX,s    
         ADDSP   14,i        ; #sauveX #sauveA #retour #limite #positioD #chaineD #positioO
         RET0                
;
; Sous programme qui multiplie le nombre en A par le nombre en X. Il retourne le resultat
; dans le registre A.
;
nombre:  .EQUATE 0           
mult:    SUBSP   2,i         ;WARNING: Number of bytes allocated (2) not equal to number of bytes listed in trace tag (0).
         CPA     0,i         
         BREQ    terminer    
         STA     nombre,s    
         LDA     0,i         
addition:ADDA    nombre,s    
         SUBX    1,i         
         CPX     0,i         
         BREQ    terminer    
         BR      addition    
terminer:ADDSP   2,i         ;WARNING: Number of bytes deallocated (2) not equal to number of bytes listed in trace tag (0).
         RET0                
;
; Sous-programme: lgtMois
; description: programme qui determine le nombre de jours
; dans un mois a partir de la variable mois
; IN
; A= mois
; OUT
; A= nombre jours du mois
;
lgtmois: CPA     4,i         
         BREQ    court       
         CPA     6,i         
         BREQ    court       
         CPA     9,i         
         BREQ    court       
         CPA     11,i        
         BREQ    court       
         CPA     2,i         
         BREQ    fev         
         LDA     31,i        
         BR      reto        
court:   LDA     30,i        
         BR      reto        
tcourt:  LDA     29,i        
         BR      reto        
fev:     LDA     annee,d     
         SUBA    1900,i      
         LDX     4,i         
         CALL    divise      
         CPA     0,i         
         BREQ    tcourt      
         LDA     28,i        
reto:    RET0  

;
; Sous-programme : sautL
; description : copie un saut de ligne dans la chaine de sortie

sautL:   LDA     SAUT,i     ; chaine d'origine
         STA     -2,s        
         LDA     0,i        ; position chaine d'origine
         STA     -4,s        
         LDA     SORTIE,i   ; chaine de destination
         STA     -6,s        
         LDA     destin,d   ; positionchaineDestination
         STA     -8,s        
         ADDA    0,i        ; longueur de 1
         STA     -10,s       
         SUBSP   10,i       ; #chaineO #positioO #chaineD #positioD #limite
         CALL    RECOPIE    
         ADDA    1,i
         STA     destin,d    ; ajustement pour prochain caractere
         RET0                             
;divise: divise nombre donner en argument A par X
;In A = dividende
; X = diviseur
;OUT A = reste
; X = quotient
;Variables locales
diviser: .EQUATE 0           
divise:  SUBSP   2,i         ;allouer espace variables locales ;WARNING: Number of bytes allocated (2) not equal to number of bytes listed in trace tag (0).
         STX     diviser,s   
         LDX     0,i         
soustr:  ADDX    1,i         
         SUBA    diviser,s   
         BRGE    soustr      
         SUBX    1,i         
         ADDA    diviser,s   
         ADDSP   2,i         ;WARNING: Number of bytes deallocated (2) not equal to number of bytes listed in trace tag (0).
         RET0                
;Sous-Proramme d'affichage de fin
;
;affiche le message de fin et termine le programme
;
fin:     STRO    final,d     
         STOP                
bienvenu:.ASCII  "Bienvenue a ce programme d'affichage d'un calendrier.\x00"
manuel:  .ASCII  "\n\nCe programme affichera un calendrier pour l'annee et le mois"
         .ASCII  "\ndesire. Il faut entrez le mois desire sous la forme AAAAMM sans quoi"
         .ASCII  "\nle programme vous dira que c'est une entree invalide. De plus, seules"
         .ASCII  "\nles années comprises inclusivement entre 1901 et 2050 sont valides."
         .ASCII  "\nAucun espace ne peut apparaître avant, à l'intérieur ou après la date."
         .ASCII  "\nPour terminer le programme il faut appuyer uniquement sur ENTREE lors de la saisie\x00."
demande: .ASCII  "\n\nEntrez la date desiree: \x00"
paye:    .ASCII  "\n\nJours de paie: \x00" 
final:   .ASCII  "\n\nFin normal du programme\x00"
entinval:.ASCII  "\n\nEntree invalide\n\x00"
compte:  .BLOCK  2           ;#2d
annee:   .BLOCK  2           ;#2d
mois:    .BLOCK  2           ;#2d
jours:   .BLOCK  2           
aaxx:    .BLOCK  2           
jourun:  .BLOCK  2           
jeuprem: .BLOCK  2                    
datedec: .BLOCK  7           
date:    .BLOCK  7
ind:     .BLOCK  2
jmois:   .BLOCK  2           
jsem:    .BLOCK  2           
jAff:    .BLOCK  2            
longeur: .BLOCK  2           ; longeur a ajouter
origine: .BLOCK  2           ; position dans la chaine d'entrée
destin:  .BLOCK  2           ; position dans la chaine de sortie
TEXTE:   .ASCII  "JANVIER FEVRIER MARS AVRIL MAI JUIN JUILLET AOUT SEPTEMBRE OCTOBRE NOVEMBRE DECEMBRE D  L  M  M  J  V  S\n    \x00"
SAUT:    .ASCII  "\n "
CHIFFRES:.ASCII  " 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31   \x00"
SORTIE:  .BLOCK  600                
         .END                  