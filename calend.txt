;************************************************************
; Programme: Vendredi.txt
;
; DESCRIPTION : Les années valides
; sont de 2000 à 2050.
;
; Auteurs: Jean-Michel Landry, Patrick Chalifour
; Codes permanents : LANJ09049206, CHAP03089503
; Courriel: landry.jean-michel.2@courrier.uqam.ca , dj991063@ens.uqam.ca
; date: 20 avril 2020
; cours: INF2171
;*************************************************************
;
;Programme principal qui appel les sous programmes nécessaires
;
         CALL    bonjour     
debut:   CALL    question
         CALL    reinit
         CALL    saisi
         CPA -1,i 
         BREQ debut  
         CALL premjour  
         BR      debut       
;
; affiche le message de bienvenu et le fonctionnement du programme.
;
bonjour: STRO    bienvenu,d  
         STRO    manuel,d    
         RET0                
;
; affiche la demande de saisie a l'utilisateur.
;
question:STRO    demande,d   
         RET0                

; 
; Reinitialise les valeurs de alphab et autres 
; variables a 0 
reinit: LDA 0,i 
LDX 0,i 
STA compte,d 
STA annee,d
STA mois,d
retalpha: STBYTEA date,x 
ADDX 1,i 
CPX 7,i 
BREQ ret 
BR retalpha 
ret: RET0

;
; Sous programme qui saisi une chaine de caractere
; entrez par l'usager et valide que les characteres saisi sont des nombres.
; Il appelle ensuite un autre sous programme qui converti la saisi en annee
; et en mois pour utilisation ulterieur dans le programme. Ainsi qu'un sous
; programme qui valide que l'annee donner par l'utilisateur est valide.
;
saisi:   LDX     0,i         
         LDA     0,i         
lecture: CHARI  date,x      ; lecture d'un caractère de chaine
         LDA 0,i         
         LDBYTEA date,x      ; charge le caractère lu  
         ADDX    1,i         ; position suivante
         CPA     '\n',i         
         BRNE    lecture    

         LDX     0,i         
         LDA     0,i   
analyse: LDBYTEA date,x
         CPA '\n',i
         BREQ finchain
         ADDX 1,i
         CPA     '0',i       
         BRLT    inval       
         CPA     '9',i       
         BRGT   inval
         SUBA    48,i
         STBYTEA datedec,x 
         CPX 6,i
         BREQ finchain     
         BR      analyse            
finchain:CPX     0,i         ; est-ce que le caractère ENTREE est le premier caractère lu
         BREQ    fin              
         CALL    converti    
         CALL    valideur
retour:  RET0  

 
inval:   STRO    entinval,d 
         LDA -1,i
         BR retour 
            
; Sous programme qui valide que la date entree est entre les bornes 1901 et 2050.
;
valideur:LDA     0,i         
         LDX     0,i         
         LDA     annee,d     
         CPA     1901,i     
         BRLT    inval       
         CPA     2050,i     
         BRGT    inval 
         LDA      mois,d
         CPA     12,i
         BRGT    inval      
         RET0                             
 
;
;Sous programme qui prend la date au long dans le champ date et la separe
;en mois et en annee
;
converti: LDA     0,i         
         LDX     1,i         
         LDBYTEA datedec,x 
         LDX 1000,i     
         CALL mult 
         STA annee,d    
            
         LDA     0,i         
         LDX     2,i         
         LDBYTEA datedec,x      
         LDX 100,i
         CAll mult       
         ADDA    annee,d     
         STA     annee,d  
   
         LDA     0,i         
         LDX     3,i         
         LDBYTEA datedec,x      
         LDX     10,i        
         CALL    mult        
         ADDA    annee,d     
         STA     annee,d
     
         LDA     0,i         
         LDX     4,i         
         LDBYTEA datedec,x      
         ADDA    annee,d     
         STA     annee,d    
 
         LDA     0,i         
         LDX     5,i         
         LDBYTEA datedec,x      
         LDX     10,i        
         CALL    mult        
         ADDA    mois,d      
         STA     mois,d   
   
         LDA     0,i         
         LDX     6,i 
         LDBYTEA datedec,x  
         ADDA    mois,d  
         STA     mois,d   
       
         DECO    annee,d     
         DECO    mois,d     
         RET0             

;
;Sous programme pour calculer la premiere journee du mois et retourne l'indice en A
; Il trouve d'abord le nombre de jour ecouler depuis 1900 puis apelle un programme de
; division speciale pour trouver le reste. Celui-ci retourne l'indice du jour(dimanche = 0).
; Puis ce programme retourne l'indice du jour.
;
premjour: LDA 0,i
LDX 0,i
;aaxx <- aaaa - 1900 
;aaxx * 365 mais 
;aaxx*365 => aaxx*(364+1) => aaxx*(1) => aaxx , car 364 est un multiple de 7
LDA annee,d
SUBA 1900,i
STA aaxx,d
ADDA compte,d
STA compte,d
;+ entier((aaxx-1) / 4)
LDA aaxx,d
SUBA 1,i
LDX 4,i
CALL divise
ADDX compte,d
STA compte,d
;+ entier((((mm - 1) * 57) + 50) / 100)
LDA mois,d
CPA 2,i
BRGT retranch
retranch: ldx aaxx,d      ; analysons le nombre d'année depuis 1900
         andx 3,i         ; divisible par 4 ?
         breq bissex      ; oui, on enlève 1
nonbisse:suba 1,i         ; -1 pour l'année non bissextile 
bissex:  suba 1,i         ; -2 pour l'année non bissextile ou -1 pour bissextile
SUBA 1,i
LDX 57,i
CALL mult
ADDA 50,i 
LDX 100,i
CALL divise
ADDX compte,d
STA compte,d
;+ (mm - 1) * 30
LDA mois,d
SUBA 1,i
LDX 30,i
CALL mult
ADDA compte,d
STA compte,d
;+ jj le premier jour donc 1
LDA 1,i
ADDA compte,d 
; divison par 7 pour avoir l'indice du jour (dimanche = 0)
LDX 7,i
CALL divise
RET0


;
; Sous programme qui multiplie le nombre en A par le nombre en X. Il retourne le resultat
; dans le registre A.
;
nombre:  .EQUATE 0           
mult:    SUBSP   2,i ;WARNING: Number of bytes allocated (2) not equal to number of bytes listed in trace tag (0).
         CPA 0,i   
         BREQ terminer     
         STA     nombre,s    
         LDA    0,i         
addition:ADDA    nombre,s    
         SUBX    1,i         
         CPX     0,i         
         BREQ    terminer    
         BR      addition    
terminer:ADDSP   2,i         ;WARNING: Number of bytes deallocated (2) not equal to number of bytes listed in trace tag (0).
         RET0   

   
;divise: divise nombre donner en argument A par X
;In A = dividende
; X = diviseur
;OUT A = reste
; X = quotient
;Variables locales
diviser: .EQUATE 0           
divise:  SUBSP   2,i         ;allouer espace variables locales ;WARNING: Number of bytes allocated (2) not equal to number of bytes listed in trace tag (0).
         STX     diviser,s   
         LDX     0,i         
soustr:  ADDX    1,i         
         SUBA    diviser,s   
         BRGE    soustr      
         SUBX    1,i         
         ADDA    diviser,s   
         ADDSP   2,i         ;WARNING: Number of bytes deallocated (2) not equal to number of bytes listed in trace tag (0).
         RET0                
;Sous-Proramme d'affichage de fin
;
;affiche le message de fin et termine le programme
;
fin:     STRO    final,d     
         STOP                
bienvenu:.ASCII  "Bienvenue a ce programme d'affichage d'un calendrier.\x00"
manuel:  .ASCII  "\n\nCe programme affichera un calendrier pour l'annee et le mois"
         .ASCII  "\ndesire. Il faut entrez le mois desire sous la forme AAAAMM sans quoi"
         .ASCII  "\nle programme vous dira que c'est une entree invalide. De plus, seules"
         .ASCII  "\nles années comprises inclusivement entre 1901 et 2050 sont valides."
         .ASCII  "\nAucun espace ne peut apparaître avant, à l'intérieur ou après la date."
         .ASCII  "Pour terminer le programme il faut appuyer uniquement sur ENTREE lors de la saisie\x00."
demande: .ASCII  "\n\nEntrez la date desiree: \x00"
final:   .ASCII  "\n\nFin normal du programme\x00"
entinval:.ASCII  "\n\nEntree invalide\n\x00"
compte:  .BLOCK  2           ;#2d
annee:   .BLOCK  2           ;#2d
mois:    .BLOCK  2           ;#2d
aaxx:     .BLOCK 2   
datedec: .BLOCK  7 
date:    .BLOCK  7 
         .END                  